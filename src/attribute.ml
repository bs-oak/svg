module Attribute = BsOakVirtualDom.Virtual_dom.Attribute

type 'a t = 'a Attribute.t

(* security helpers *)

let no_javascript_uri s = 
  let re = [%re "/^javascript:/i"] in
  let tester = Js.String.replaceByRe [%re "/\\s/g"] "" s in
  if Js.Re.test tester re then "" else s

(* regular attributes *)

let accent_height v = Attribute.attribute "accent-height" v
let accelerate v = Attribute.attribute "accelerate" v
let accumulate v = Attribute.attribute "accumulate" v
let additive v = Attribute.attribute "additive" v
let alphabetic v = Attribute.attribute "alphabetic" v
let allow_reorder v = Attribute.attribute "allowReorder" v
let amplitude v = Attribute.attribute "amplitude" v
let arabic_form v = Attribute.attribute "arabic-form" v
let ascent v = Attribute.attribute "ascent" v
let attribute_name v = Attribute.attribute "attributeName" v
let attribute_type v = Attribute.attribute "attributeType" v
let auto_reverse v = Attribute.attribute "autoReverse" v
let azimuth v = Attribute.attribute "azimuth" v
let base_frequency v = Attribute.attribute "baseFrequency" v
let base_profile v = Attribute.attribute "baseProfile" v
let bbox v = Attribute.attribute "bbox" v
let begin' v = Attribute.attribute "begin" v
let bias v = Attribute.attribute "bias" v
let by v = Attribute.attribute "by" (no_javascript_uri v)
let calc_mode v = Attribute.attribute "calcMode" v
let cap_height v = Attribute.attribute "cap-height" v
let class' v = Attribute.attribute "class" v
let clip_path_units v = Attribute.attribute "clipPathUnits" v
let content_script_type v = Attribute.attribute "contentScriptType" v
let content_style_type v = Attribute.attribute "contentStyleType" v
let cx v = Attribute.attribute "cx" v
let cy v = Attribute.attribute "cy" v
let d v = Attribute.attribute "d" v
let decelerate v = Attribute.attribute "decelerate" v
let descent v = Attribute.attribute "descent" v
let diffuse_constant v = Attribute.attribute "diffuseConstant" v
let divisor v = Attribute.attribute "divisor" v
let dur v = Attribute.attribute "dur" v
let dx v = Attribute.attribute "dx" v
let dy v = Attribute.attribute "dy" v
let edge_mode v = Attribute.attribute "edgeMode" v
let elevation v = Attribute.attribute "elevation" v
let end' v = Attribute.attribute "end" v
let exponent v = Attribute.attribute "exponent" v
let external_resources_required v = Attribute.attribute "externalResourcesRequired" v
let filter_res v = Attribute.attribute "filterRes" v
let filter_units v = Attribute.attribute "filterUnits" v
let format v = Attribute.attribute "format" v
let from v = Attribute.attribute "from" (no_javascript_uri v)
let fx v = Attribute.attribute "fx" v
let fy v = Attribute.attribute "fy" v
let g1 v = Attribute.attribute "g1" v
let g2 v = Attribute.attribute "g2" v
let glyph_name v = Attribute.attribute "glyph-name" v
let glyph_ref v = Attribute.attribute "glyphRef" v
let gradient_transform v = Attribute.attribute "gradientTransform" v
let gradient_units v = Attribute.attribute "gradientUnits" v
let hanging v = Attribute.attribute "hanging" v
let height v = Attribute.attribute "height" v
let horiz_adv_x v = Attribute.attribute "horiz-adv-x" v
let horiz_origin_x v = Attribute.attribute "horiz-origin-x" v
let horiz_origin_y v = Attribute.attribute "horiz-origin-y" v
let id v = Attribute.attribute "id" v
let ideographic v = Attribute.attribute "ideographic" v
let in' v = Attribute.attribute "in" v
let in2 v = Attribute.attribute "in2" v
let intercept v = Attribute.attribute "intercept" v
let k v = Attribute.attribute "k" v
let k1 v = Attribute.attribute "k1" v
let k2 v = Attribute.attribute "k2" v
let k3 v = Attribute.attribute "k3" v
let k4 v = Attribute.attribute "k4" v
let kernel_matrix v = Attribute.attribute "kernelMatrix" v
let kernel_unit_length v = Attribute.attribute "kernelUnitLength" v
let key_points v = Attribute.attribute "keyPoints" v
let key_splines v = Attribute.attribute "keySplines" v
let key_times v = Attribute.attribute "keyTimes" v
let lang v = Attribute.attribute "lang" v
let length_adjust v = Attribute.attribute "lengthAdjust" v
let limiting_cone_angle v = Attribute.attribute "limitingConeAngle" v
let local v = Attribute.attribute "local" v
let marker_height v = Attribute.attribute "markerHeight" v
let marker_units v = Attribute.attribute "markerUnits" v
let marker_width v = Attribute.attribute "markerWidth" v
let mask_content_units v = Attribute.attribute "maskContentUnits" v
let mask_units v = Attribute.attribute "maskUnits" v
let mathematical v = Attribute.attribute "mathematical" v
let max v = Attribute.attribute "max" v
let media v = Attribute.attribute "media" v
let method' v = Attribute.attribute "method" v
let min v = Attribute.attribute "min" v
let mode v = Attribute.attribute "mode" v
let name v = Attribute.attribute "name" v
let num_octaves v = Attribute.attribute "numOctaves" v
let offset v = Attribute.attribute "offset" v
let operator v = Attribute.attribute "operator" v
let order v = Attribute.attribute "order" v
let orient v = Attribute.attribute "orient" v
let orientation v = Attribute.attribute "orientation" v
let origin v = Attribute.attribute "origin" v
let overline_position v = Attribute.attribute "overline-position" v
let overline_thickness v = Attribute.attribute "overline-thickness" v
let panose1 v = Attribute.attribute "panose-1" v
let path v = Attribute.attribute "path" v
let path_length v = Attribute.attribute "pathLength" v
let pattern_content_units v = Attribute.attribute "patternContentUnits" v
let pattern_transform v = Attribute.attribute "patternTransform" v
let pattern_units v = Attribute.attribute "patternUnits" v
let point_order v = Attribute.attribute "point-order" v
let points v = Attribute.attribute "points" v
let points_at_x v = Attribute.attribute "pointsAtX" v
let points_at_y v = Attribute.attribute "pointsAtY" v
let points_at_z v = Attribute.attribute "pointsAtZ" v
let preserve_alpha v = Attribute.attribute "preserveAlpha" v
let preserve_aspect_ratio v = Attribute.attribute "preserveAspectRatio" v
let primitive_units v = Attribute.attribute "primitiveUnits" v
let r v = Attribute.attribute "r" v
let radius v = Attribute.attribute "radius" v
let ref_x v = Attribute.attribute "refX" v
let ref_y v = Attribute.attribute "refY" v
let rendering_intent v = Attribute.attribute "rendering-intent" v
let repeat_count v = Attribute.attribute "repeatCount" v
let repeat_dur v = Attribute.attribute "repeatDur" v
let required_extensions v = Attribute.attribute "requiredExtensions" v
let required_features v = Attribute.attribute "requiredFeatures" v
let restart v = Attribute.attribute "restart" v
let result v = Attribute.attribute "result" v
let rotate v = Attribute.attribute "rotate" v
let rx v = Attribute.attribute "rx" v
let ry v = Attribute.attribute "ry" v
let scale v = Attribute.attribute "scale" v
let seed v = Attribute.attribute "seed" v
let slope v = Attribute.attribute "slope" v
let spacing v = Attribute.attribute "spacing" v
let specular_constant v = Attribute.attribute "specularConstant" v
let specular_exponent v = Attribute.attribute "specularExponent" v
let speed v = Attribute.attribute "speed" v
let spread_method v = Attribute.attribute "spreadMethod" v
let start_offset v = Attribute.attribute "startOffset" v
let std_deviation v = Attribute.attribute "stdDeviation" v
let stemh v = Attribute.attribute "stemh" v
let stemv v = Attribute.attribute "stemv" v
let stitch_tiles v = Attribute.attribute "stitchTiles" v
let strikethrough_position v = Attribute.attribute "strikethrough-position" v
let strikethrough_thickness v = Attribute.attribute "strikethrough-thickness" v
let string' v = Attribute.attribute "string" v
let style v = Attribute.attribute "style" v
let surface_scale v = Attribute.attribute "surfaceScale" v
let system_language v = Attribute.attribute "systemLanguage" v
let table_values v = Attribute.attribute "tableValues" v
let target v = Attribute.attribute "target" v
let target_x v = Attribute.attribute "targetX" v
let target_y v = Attribute.attribute "targetY" v
let text_length v = Attribute.attribute "textLength" v
let title v = Attribute.attribute "title" v
let to' v = Attribute.attribute "to" (no_javascript_uri v)
let transform v = Attribute.attribute "transform" v
let type' v = Attribute.attribute "type" v
let u1 v = Attribute.attribute "u1" v
let u2 v = Attribute.attribute "u2" v
let underline_position v = Attribute.attribute "underline-position" v
let underline_thickness v = Attribute.attribute "underline-thickness" v
let unicode v = Attribute.attribute "unicode" v
let unicode_range v = Attribute.attribute "unicode-range" v
let units_per_em v = Attribute.attribute "units-per-em" v
let v_alphabetic v = Attribute.attribute "v-alphabetic" v
let v_hanging v = Attribute.attribute "v-hanging" v
let v_ideographic v = Attribute.attribute "v-ideographic" v
let v_mathematical v = Attribute.attribute "v-mathematical" v
let values v = Attribute.attribute "values" (no_javascript_uri v)
let version v = Attribute.attribute "version" v
let vert_adv_y v = Attribute.attribute "vert-adv-y" v
let vert_origin_x v = Attribute.attribute "vert-origin-x" v
let vert_origin_y v = Attribute.attribute "vert-origin-y" v
let view_box v = Attribute.attribute "viewBox" v
let view_target v = Attribute.attribute "viewTarget" v
let width v = Attribute.attribute "width" v
let widths v = Attribute.attribute "widths" v
let x v = Attribute.attribute "x" v
let x_height v = Attribute.attribute "x-height" v
let x1 v = Attribute.attribute "x1" v
let x2 v = Attribute.attribute "x2" v
let x_channel_selector v = Attribute.attribute "xChannelSelector" v
let xlink_actuate v = Attribute.attribute_ns "http://www.w3.org/1999/xlink" "xlink:actuate" v
let xlink_arcrole v = Attribute.attribute_ns "http://www.w3.org/1999/xlink" "xlink:arcrole" v
let xlink_href v = Attribute.attribute_ns "http://www.w3.org/1999/xlink" "xlink:href" (no_javascript_uri v)
let xlink_role v = Attribute.attribute_ns "http://www.w3.org/1999/xlink" "xlink:role" v
let xlink_show v = Attribute.attribute_ns "http://www.w3.org/1999/xlink" "xlink:show" v
let xlink_title v = Attribute.attribute_ns "http://www.w3.org/1999/xlink" "xlink:title" v
let xlink_type v = Attribute.attribute_ns "http://www.w3.org/1999/xlink" "xlink:type" v
let xml_base v = Attribute.attribute_ns "http://www.w3.org/XML/1998/namespace" "xml:base" v
let xml_lang v = Attribute.attribute_ns "http://www.w3.org/XML/1998/namespace" "xml:lang" v
let xml_space v = Attribute.attribute_ns "http://www.w3.org/XML/1998/namespace" "xml:space" v
let y v = Attribute.attribute "y" v
let y1 v = Attribute.attribute "y1" v
let y2 v = Attribute.attribute "y2" v
let y_channel_selector v = Attribute.attribute "yChannelSelector" v
let z v = Attribute.attribute "z" v
let zoom_and_pan v = Attribute.attribute "zoomAndPan" v

(* presentation attributes *)

let alignment_baseline v = Attribute.attribute "alignment-baseline" v
let baseline_shift v = Attribute.attribute "baseline-shift" v
let clip_path v = Attribute.attribute "clip-path" v
let clip_rule v = Attribute.attribute "clip-rule" v
let clip v = Attribute.attribute "clip" v
let color_interpolation_filters v = Attribute.attribute "color-interpolation-filters" v
let color_interpolation v = Attribute.attribute "color-interpolation" v
let color_profile v = Attribute.attribute "color-profile" v
let color_rendering v = Attribute.attribute "color-rendering" v
let color v = Attribute.attribute "color" v
let cursor v = Attribute.attribute "cursor" v
let direction v = Attribute.attribute "direction" v
let display v = Attribute.attribute "display" v
let dominant_baseline v = Attribute.attribute "dominant-baseline" v
let enable_background v = Attribute.attribute "enable-background" v
let fill_opacity v = Attribute.attribute "fill-opacity" v
let fill_rule v = Attribute.attribute "fill-rule" v
let fill v = Attribute.attribute "fill" v
let filter v = Attribute.attribute "filter" v
let flood_color v = Attribute.attribute "flood-color" v
let flood_opacity v = Attribute.attribute "flood-opacity" v
let font_family v = Attribute.attribute "font-family" v
let font_size_adjust v = Attribute.attribute "font-size-adjust" v
let font_size v = Attribute.attribute "font-size" v
let font_stretch v = Attribute.attribute "font-stretch" v
let font_style v = Attribute.attribute "font-style" v
let font_variant v = Attribute.attribute "font-variant" v
let font_weight v = Attribute.attribute "font-weight" v
let glyph_orientation_horizontal v = Attribute.attribute "glyph-orientation-horizontal" v
let glyph_orientation_vertical v = Attribute.attribute "glyph-orientation-vertical" v
let image_rendering v = Attribute.attribute "image-rendering" v
let kerning v = Attribute.attribute "kerning" v
let letter_spacing v = Attribute.attribute "letter-spacing" v
let lighting_color v = Attribute.attribute "lighting-color" v
let marker_end v = Attribute.attribute "marker-end" v
let marker_mid v = Attribute.attribute "marker-mid" v
let marker_start v = Attribute.attribute "marker-start" v
let mask v = Attribute.attribute "mask" v
let opacity v = Attribute.attribute "opacity" v
let overflow v = Attribute.attribute "overflow" v
let pointer_events v = Attribute.attribute "pointer-events" v
let shape_rendering v = Attribute.attribute "shape-rendering" v
let stop_color v = Attribute.attribute "stop-color" v
let stop_opacity v = Attribute.attribute "stop-opacity" v
let stroke_dasharray v = Attribute.attribute "stroke-dasharray" v
let stroke_dashoffset v = Attribute.attribute "stroke-dashoffset" v
let stroke_linecap v = Attribute.attribute "stroke-linecap" v
let stroke_linejoin v = Attribute.attribute "stroke-linejoin" v
let stroke_miterlimit v = Attribute.attribute "stroke-miterlimit" v
let stroke_opacity v = Attribute.attribute "stroke-opacity" v
let stroke_width v = Attribute.attribute "stroke-width" v
let stroke v = Attribute.attribute "stroke" v
let text_anchor v = Attribute.attribute "text-anchor" v
let text_decoration v = Attribute.attribute "text-decoration" v
let text_rendering v = Attribute.attribute "text-rendering" v
let unicode_bidi v = Attribute.attribute "unicode-bidi" v
let visibility v = Attribute.attribute "visibility" v
let word_spacing v = Attribute.attribute "word-spacing" v
let writing_mode v = Attribute.attribute "writing-mode" v

(* events - custom *)

let on event decoder = Attribute.on event (Attribute.Normal decoder)
let prevent_default_on event decoder = Attribute.on event (Attribute.MayPreventDefault decoder)
let stop_propagation_on event decoder = Attribute.on event (Attribute.MayStopPropagation decoder)
let custom event decoder = Attribute.on event (Attribute.Custom decoder)

(* events - mouse *)

let on_click msg = on "onclick" (BsOakJson.Decode.succeed msg)
let on_mouse_down msg = on "mousedown" (BsOakJson.Decode.succeed msg)
let on_mouse_up msg = on "mouseup" (BsOakJson.Decode.succeed msg)
let on_mouse_over msg = on "mouseover" (BsOakJson.Decode.succeed msg)
let on_mouse_out msg = on "mouseout" (BsOakJson.Decode.succeed msg)